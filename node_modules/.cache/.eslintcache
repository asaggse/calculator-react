[{"C:\\Users\\Alessandro\\Documents\\React\\calculator-react\\src\\index.js":"1","C:\\Users\\Alessandro\\Documents\\React\\calculator-react\\src\\reportWebVitals.js":"2","C:\\Users\\Alessandro\\Documents\\React\\calculator-react\\src\\App.js":"3"},{"size":535,"mtime":1674669237925,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1674669238483,"results":"6","hashOfConfig":"5"},{"size":2855,"mtime":1674673720655,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ytxgc1",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\Users\\Alessandro\\Documents\\React\\calculator-react\\src\\index.js",[],[],"C:\\Users\\Alessandro\\Documents\\React\\calculator-react\\src\\reportWebVitals.js",[],[],"C:\\Users\\Alessandro\\Documents\\React\\calculator-react\\src\\App.js",["18"],[],"import './App.css';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction App() {\n  const [value, setValue] = useState('');\n  const [firstValue, setFirstValue] = useState(null);\n  const [operator, setOperator] = useState(null);\n\n  function handleNumberClick(number) {\n    setValue(value + number);\n  }\n\n  function handleOperatorClick(op) {\n    if (firstValue !== null && value !== null) {\n      let result;\n      if (operator === '+') {\n        result = parseFloat(firstValue) + parseFloat(value);\n      } else if (operator === '-') {\n        result = parseFloat(firstValue) - parseFloat(value);\n      } else if (operator === '*') {\n        result = parseFloat(firstValue) * parseFloat(value);\n      } else if (operator === '/') {\n        result = parseFloat(firstValue) / parseFloat(value);\n      } else {\n        result = parseFloat(value);\n      }\n      setValue(result);\n    }\n    setOperator(op);\n    setFirstValue(value);\n    setValue('');\n  }\n\n  function handleEqualClick() {\n    if (firstValue !== null && value !== null) {\n      let result;\n      if (operator === '+') {\n        result = parseFloat(firstValue) + parseFloat(value);\n      } else if (operator === '-') {\n        result = parseFloat(firstValue) - parseFloat(value);\n      } else if (operator === '*') {\n        result = parseFloat(firstValue) * parseFloat(value);\n      } else if (operator === '/') {\n        result = parseFloat(firstValue) / parseFloat(value);\n      } else {\n        result = parseFloat(value);\n      }\n      setValue(result);\n      setFirstValue(null);\n      setOperator(null);\n    }\n  }\n\n  return (\n    <div className=\"calculator\">\n      <div className=\"display\">{value}</div>\n      <div className=\"numbers\">\n        <button onClick={() => handleNumberClick(1)}>1</button>\n        <button onClick={() => handleNumberClick(2)}>2</button>\n        <button onClick={() => handleNumberClick(3)}>3</button>\n        <button onClick={() => handleNumberClick(4)}>4</button>\n        <button onClick={() => handleNumberClick(5)}>5</button>\n        <button onClick={() => handleNumberClick(6)}>6</button>\n        <button onClick={() => handleNumberClick(7)}>7</button>\n        <button onClick={() => handleNumberClick(8)}>8</button>\n        <button onClick={() => handleNumberClick(9)}>9</button>\n        <button onClick={() => handleNumberClick(0)}>0</button>\n        <button onClick={() => setValue('')}>C</button>\n      </div>\n      <div className=\"operators\">\n        <button onClick={() => handleOperatorClick('+')}>+</button>\n        <button onClick={() => handleOperatorClick('-')}>-</button>\n        <button onClick={() => handleOperatorClick('*')}>x</button>\n        <button onClick={() => handleOperatorClick('/')}>/</button>\n        <button onClick={handleEqualClick}>=</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":3,"column":10,"nodeType":"21","messageId":"22","endLine":3,"endColumn":19},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]